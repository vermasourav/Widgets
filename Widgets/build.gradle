apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'

android {

    compileSdk rootProject.compile_sdk_version
    namespace 'com.verma.android.widgets'

    defaultConfig {
        minSdk rootProject.min_sdk_version
        targetSdk rootProject.target_sdk_version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        //setProperty("archivesBaseName", applicationId + "-v" + versionCode + "(" + versionName + ")")

    }

    buildTypes {
        release {
            minifyEnabled false
            //proguardFile 'proguard-google-play-services.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.KEY
        }
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

}

dependencies {
   // implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'com.github.bumptech.glide:glide:4.16.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'androidx.test:monitor:1.6.1'
    testImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'junit:junit:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'

    // Other
    api 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.google.code.gson:gson:2.10.1'
}

/*

task verma_deleteArr(type: Delete) {
    delete 'output/Widgets-release.arr'
    delete 'output/Widgets-debug.arr'
}

task verma_createArr(type: Copy) {
    from('build/outputs/aar/')
    into('output/')
    include('Widgets-release.aar')
    rename('Widgets-release.aar', 'Widgets.aar')
}


task verma_addToProject(type: Copy) {
    from('output/')
    into('../sample/libs/')
    include('Widgets.aar')
}

verma_createArr.dependsOn(verma_deleteArr, build)
verma_addToProject.dependsOn(verma_createArr)*/
